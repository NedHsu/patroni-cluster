services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.11
    container_name: etcd
    command: >
      /usr/local/bin/etcd
      --name etcd0
      --data-dir /etcd-data
      --initial-advertise-peer-urls http://etcd:2380
      --listen-peer-urls http://0.0.0.0:2380
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://etcd:2379
      --initial-cluster etcd0=http://etcd:2380
      --initial-cluster-token patroni-cluster
      --initial-cluster-state new
      --enable-v2=false
    environment:
      - ETCDCTL_API=3
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - patroni-net
    volumes:
      - etcd-data:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "--endpoints=http://localhost:2379", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 3

  patroni-1:
    image: ongres/patroni:latest
    container_name: patroni-1
    environment:
      - PATRONI_NAME=patroni-1
      - PATRONI_SCOPE=postgres-cluster
      - PATRONI_ETCD_HOSTS=etcd:2379
      - PATRONI_ETCD_PROTOCOL=http
      - PATRONI_ETCD_USE_PROXIES=false
      - PATRONI_ETCD_RETRY_TIMEOUT=10
      - PATRONI_ETCD_TTL=30
      - PATRONI_ETCD_ALLOW_RECONNECT=true
      - PATRONI_ETCD_USE_GRPC=false
      - PATRONI_ETCD_API_VERSION=v3
      - PATRONI_REST_API_LISTEN=0.0.0.0:8008
      - PATRONI_REST_API_CONNECT_ADDRESS=patroni-1:8008
      - PATRONI_POSTGRESQL_DATA_DIR=/var/lib/postgresql/data
      - PATRONI_POSTGRESQL_LISTEN=0.0.0.0:5432
      - PATRONI_POSTGRESQL_CONNECT_ADDRESS=patroni-1:5432
      - PATRONI_POSTGRESQL_USERNAME=postgres
      - PATRONI_POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - PATRONI_REPLICATION_PASSWORD=${PATRONI_REPLICATION_PASSWORD}
      - PATRONI_ADMIN_PASSWORD=${PATRONI_ADMIN_PASSWORD}
      - ETCDCTL_API=3
    volumes:
      - ./patroni/patroni-1.yml:/config/patroni.yml
      - ./patroni/pg_hba.conf:/pg_hba.conf
      - ./data/patroni-1:/var/lib/postgresql/data
    networks:
      - patroni-net
    ports:
      - "5432:5432"
      - "8008:8008"
    command: ["/bin/sh", "-c", "PATRONI_CONFIG_FILE=/config/patroni.yml patroni"]
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8008/health | grep -q 'running'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      etcd:
        condition: service_healthy

  patroni-2:
    image: ongres/patroni:latest
    container_name: patroni-2
    environment:
      - PATRONI_NAME=patroni-2
      - PATRONI_SCOPE=postgres-cluster
      - PATRONI_ETCD_HOSTS=etcd:2379
      - PATRONI_ETCD_PROTOCOL=http
      - PATRONI_ETCD_USE_PROXIES=false
      - PATRONI_ETCD_RETRY_TIMEOUT=10
      - PATRONI_ETCD_TTL=30
      - PATRONI_ETCD_ALLOW_RECONNECT=true
      - PATRONI_ETCD_USE_GRPC=false
      - PATRONI_ETCD_API_VERSION=v3
      - PATRONI_REST_API_LISTEN=0.0.0.0:8008
      - PATRONI_REST_API_CONNECT_ADDRESS=patroni-2:8008
      - PATRONI_POSTGRESQL_DATA_DIR=/var/lib/postgresql/data
      - PATRONI_POSTGRESQL_LISTEN=0.0.0.0:5432
      - PATRONI_POSTGRESQL_CONNECT_ADDRESS=patroni-2:5432
      - PATRONI_POSTGRESQL_USERNAME=postgres
      - PATRONI_POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - PATRONI_REPLICATION_PASSWORD=${PATRONI_REPLICATION_PASSWORD}
      - PATRONI_ADMIN_PASSWORD=${PATRONI_ADMIN_PASSWORD}
      - ETCDCTL_API=3
    volumes:
      - ./patroni/patroni-2.yml:/config/patroni.yml
      - ./patroni/pg_hba.conf:/pg_hba.conf
      - ./data/patroni-2:/var/lib/postgresql/data
    networks:
      - patroni-net
    ports:
      - "5433:5432"
      - "8009:8008"
    command: ["/bin/sh", "-c", "PATRONI_CONFIG_FILE=/config/patroni.yml patroni"]
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8008/health | grep -q 'running'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      etcd:
        condition: service_healthy

  patroni-3:
    image: ongres/patroni:latest
    container_name: patroni-3
    environment:
      - PATRONI_NAME=patroni-3
      - PATRONI_SCOPE=postgres-cluster
      - PATRONI_ETCD_HOSTS=etcd:2379
      - PATRONI_ETCD_PROTOCOL=http
      - PATRONI_ETCD_USE_PROXIES=false
      - PATRONI_ETCD_RETRY_TIMEOUT=10
      - PATRONI_ETCD_TTL=30
      - PATRONI_ETCD_ALLOW_RECONNECT=true
      - PATRONI_ETCD_USE_GRPC=false
      - PATRONI_ETCD_API_VERSION=v3
      - PATRONI_REST_API_LISTEN=0.0.0.0:8008
      - PATRONI_REST_API_CONNECT_ADDRESS=patroni-3:8008
      - PATRONI_POSTGRESQL_DATA_DIR=/var/lib/postgresql/data
      - PATRONI_POSTGRESQL_LISTEN=0.0.0.0:5432
      - PATRONI_POSTGRESQL_CONNECT_ADDRESS=patroni-3:5432
      - PATRONI_POSTGRESQL_USERNAME=postgres
      - PATRONI_POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - PATRONI_REPLICATION_PASSWORD=${PATRONI_REPLICATION_PASSWORD}
      - PATRONI_ADMIN_PASSWORD=${PATRONI_ADMIN_PASSWORD}
      - ETCDCTL_API=3
    volumes:
      - ./patroni/patroni-3.yml:/config/patroni.yml
      - ./patroni/pg_hba.conf:/pg_hba.conf
      - ./data/patroni-3:/var/lib/postgresql/data
    networks:
      - patroni-net
    ports:
      - "5434:5432"
      - "8010:8008"
    command: ["/bin/sh", "-c", "PATRONI_CONFIG_FILE=/config/patroni.yml patroni"]
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8008/health | grep -q 'running'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      etcd:
        condition: service_healthy

  redis:
    image: redis:7.2
    container_name: redis
    networks:
      - patroni-net
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "5050:80"
    networks:
      - patroni-net
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - haproxy
      - patroni-1
      - patroni-2
      - patroni-3

  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    ports:
      - "5435:5435"
      - "8404:8404"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - patroni-net
    depends_on:
      - patroni-1
      - patroni-2
      - patroni-3
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  etcd-data:
  pgadmin-data:
  redis-data:

networks:
  patroni-net:
    driver: bridge
